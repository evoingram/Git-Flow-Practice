
    Codepen Link: https://codepen.io/evoingram/pen/RwwLWVO
    
    1. What is Semantic HTML? 
	    --html tags that give meaning to search engines
    2. What is HTML used for? 
	    -- creating websites to display information
    3. What is an attribute and where do we put it? 
	    --property of an HTML tag, goes inside the html tag like so:
        <p class="">Blah.</p>
    4. What is the h1 tag used for? How many times should I use it on a page?
	    --Once for the main heading of the entire page.
    5. Name two tags that have required attributes
	    --img src and alt
    6. What do we put in the head of our HTML document? 
	    --some scripts, custom css styles within <style> tags, links to libraries you call on, search engine instructions, things invisible to the site visitor but that you want the search engine to know about.
    7. What is an id? 
	    --An id is a name you give to a specific tag.  You only use it once on a page; it's meant to single out individual elements and should be used when necessary, but as sparingly as possible.
    8. What elements can I add an id to? 
	    --All elements.
    9. How many times can I use the same id on a page? 
	    --Once.
    10. What is a class? 
	    --Classes are a way to select elements on the page, but it's not like ID where you only want to use it on one element on the page; you can use it on multiple, many elements on the page.  It has less specificity than ID.
    11. What elements can I add a class to? 
	    --All elements.
    12. How many times can I use the same class on a page? 
	    --As many times as you want.
    13. How do I get my link to open in a new tab?
	    --<a href="#" target="_blank">
    14. What is the alt attribute used for? 
	    --Gives an alternate text description of the image.
    15. How do I reference an id?
	    --<a id="IDNameHere" href="#">Link Here</a>
    16. What is the difference between a section and a div
	    --Section is a semantic html tag for defining the section to the browser, more structured than a div, and a div is an unstructured container.  Div is presenational HTML and does not convey meaning like section does.
    17. What is CSS used for? 
	    --Styling a website, provides presentational instructions to the browser for how to style the website.
    18. How to we select an element? Example - every h2 on the page
	    -- h2 {color: #002244;}
    19. What is the difference between a class and an id? - Give me an example of when I might use each one
	    --ID is meant for one specific tag on the page, and classes can be used many times on a page for many elements.
        Example when you would use an ID: You want to change the text color of one specific paragraph on a page, so you give an ID to the one paragraph to change the color of that specific paragraph.
        Example when you would use a class: You want all the paragraphs in a certain section to be a certain color, so you give a class name to all the paragraphs you want to be that color.
    20. How do we select classes in CSS?
	    -- .classname {color: #002244;}
    21. How do we select a p element with a single class of “human””?
	    --p.human {color: #002244;}
    22. What is a parent child selector? When would this be useful? 
	    --Children are the elements that fall within another element, the parent.  You can use css to style only children of a certain parent.  This is useful for repetitive content where you might want 'every third paragraph' or 'all children of X parent' to be a certain size or something.
    23. How do you select all links within a div with the class of sidebar?
	    --div.sidebar p{color: #69BE28;}
    24. What is a pseudo selector?
	    --It's used to style a state of a certain element (example would be a:hover{color: #002244;}, hover being the pseudo-class)
    25. What do we use the change the spacing between lines?
	    --line-height
    26. What do we use to change the spacing between letters?
	    --letter-spacing
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
	    --text-transform: uppercase;
          text-transform: lowercase;
          text-transform: capitalize;
    28. How do I add a 1px border around my div that is dotted and black?
	    -- div {border: 1px dotted black;}
    29. How do I select everything on the page? 
	    --* {color: #002244;}
    30. How do I write a comment in CSS?
	    --/* Comment here. */
    31. How do I find out what file I am in, when I am using the command line? 
	    --git status
    32. Using the command line - how do I see a list of files/folders in my current folder?
	    --ls  / ls -la additionally displays hidden files
    33. How do I remove a file via the command line? Why do I have to be careful with this? 
	    --rm "filename"; have to be careful because there's no warnings/prompts, and it's not undoable.
    34. Why should I use version control? 
	    --Because when many people are collaborating together to make a piece of software or when you're fixing bugs, you need a paper trail to track what you've done and how you've done it, so if something messes up or whenever necessary, you can roll back that change and/or fix it.
    35. How often should I commit to github?
	    --Early and often, every 20 mins.  Generally speaking, when a logical chunk is completed.
    36. What is the command we would use to push our repo up to github? 
	    --git push
    37. Walk me through Lambda's git flow. 
	    --Fork the repo (fork on github).
          Clone the repo to your local drive (git clone "url").
          Make your changes (however you make your changes normally).
          Add your changes to the staging area ("git add ." will stage all changes you've made, or you can put a file name instead of a period).
          Commit the changes (git commit -m "message").
          Publish the changes (git push).
          You may check the status in between at any time with "git status".

Stretch Questions

    1. What is the difference between an inline element and a block element?
        --Inline happens within the line where the element occurs and does not start on a new line.  Inline content will take up only as much space as the content requires.  Block elements start on a new line and take up the full width available.
    2. What happens when an element is positioned absolutely? 
        --It is positioned relative to its first positioned ancestor element.
    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 
        --inline-block
    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
        --Block: li, p, nav, ol
          Inline: a span strong sub
          Inline-Block: img
    5. In your own words, explain the box model. What is the fix for the box model? 
        --It's basically a box that wraps around every element.  The 'content box' is on the inside.  Just outside the content is the 'padding box'.  Just outside the 'padding box' is the 'border box' and outside of that is the 'margin box'.  
        The "fix" is the following css code:
            html {box-sizing: border-box;}
            *, *:before, *:after {box-sizing: inherit;}
        Closely spaced elements often overlap each other or break the layout and this 'fix' will solve a lot of these problems.
   --> 